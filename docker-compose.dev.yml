networks:
  monitoring_net:
    external: true
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name:  ai_gift_assistant_frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./frontend/.env
    networks:
      - monitoring_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name:  ai_gift_assistant_backend
    ports:
      - "13000:13000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    env_file:
      - ./backend/.env
    depends_on:
      - db
    networks:
      - monitoring_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:13000/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  db:
    image: postgres:16
    container_name:  ai_gift_assistant_db
    ports:
      - "15432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: ai_gift_assistant
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 3

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    entrypoint: >
      sh -c "
        ollama serve & 
        until ollama list >/dev/null 2>&1; do
          echo 'Waiting for Ollama to start...'
          sleep 2
        done &&
        ollama pull llama3.1 &&
        wait
      "
  redis:
    image: redis:7-alpine
    container_name: ai_gift_assistant_redis
    ports:
      - "6378:6379"   
    volumes:
      - redis_data:/data
    networks:
      - monitoring_net
    command: ["redis-server", "--appendonly", "yes"]  
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis_exporter
    environment:
      - REDIS_ADDR=redis:6379
    ports:
      - "9121:9121"
    networks:
      - monitoring_net
    depends_on:
    - redis

volumes:
  postgres_data:
  ollama_data:
  redis_data: